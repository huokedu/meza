---
# Parsoid config file
#
# See also:
# - `npm start -- -h` for more information about passing config files via
#   the commandline.
# - lib/config/ParsoidConfig.js for all the properties that you can configure
#   here. Not all properties are documented here.

worker_heartbeat_timeout: 300000

# FIXME: Make the m_force_debug variable increase logging level
logging:
    level: info

metrics:
   type: log

services:
  - module: lib/index.js
    entrypoint: apiServiceWorker
    conf:
        # For backwards compatibility, and to continue to support non-static
        # configs for the time being, optionally provide a path to a
        # localsettings.js file.  See localsettings.example.js
        #localsettings: ./localsettings.js

        # Set your own user-agent string
        # Otherwise, defaults to:
        #   'Parsoid/<current-version-defined-in-package.json>'
        #userAgent: 'My-User-Agent-String'

        # Configure Parsoid to point to your MediaWiki instances.
        mwApis:

        # for all wiki IDs do setMwApi
        {% for wiki in list_of_wikis %}

        # {{ wiki }}
        - # uri = the URL of the MediaWiki API endpoint

          {% if groups['app-servers']|length|int == 1 and groups['parsoid-servers']|length|int == 1 and groups['app-servers'][0] == groups['parsoid-servers'][0] -%}

          uri: 'http://127.0.0.1:8080/{{ wiki }}/api.php'

          {%- elif 'load-balancers' not in groups or groups['load-balancers']|length|int == 0 -%}

          uri: 'http://{{ groups["load-balancers-unmanaged"][0] }}:{{ load_balancer_unmanaged_mediawiki_port }}/{{ wiki }}/api.php'
          # proxy: { uri: 'http://{{ groups["load-balancers-unmanaged"][0] }}:{{ load_balancer_unmanaged_mediawiki_port }}/' }

          {%- else -%}

          uri: 'http://{{ groups["load-balancers"][0] }}:8081/{{ wiki }}/api.php'
          # proxy: { uri: 'http://{{ groups["load-balancers"][0] }}:8081/' }

          {%- endif %}

          # The "domain" is used for communication with Visual Editor
          # and RESTBase.  It defaults to the hostname portion of
          # the `uri` property above, but you can manually set it
          # to an arbitrary string. It must match the "domain" set
          # in $wgVirtualRestConfig.
          #
          # Not really the domain, needs to be specific to each wiki
          domain: '{{ wiki }}'
          prefix: '{{ wiki }}'

        {% endfor %}


        # We pre-define wikipedias as 'enwiki', 'dewiki' etc. Similarly
        # for other projects: 'enwiktionary', 'enwikiquote', 'enwikibooks',
        # 'enwikivoyage' etc.
        # The default for this is false. Uncomment the line below if you want
        # to load WMF's config for wikipedias, etc.
        loadWMF: false

        # A default proxy to connect to the API endpoints.
        # Default: undefined (no proxying).
        # Overridden by per-wiki proxy config in setMwApi.
        #defaultAPIProxyURI: 'http://proxy.example.org:8080'

        # Enable debug mode (prints extra debugging messages)
        {% if m_force_debug %}

        debug: true

        {% else %}

        debug: false

        {% endif %}

        # Use the PHP preprocessor to expand templates via the MW API (default true)
        #usePHPPreProcessor: false

        # Use selective serialization (default false)
        # FIXME: meza using MW 1.27 had this set to true in localsettings.js.
        #        Do we still want it true? Or use default false?
        # useSelser: true

        # Allow cross-domain requests to the API (default '*')
        # Sets Access-Control-Allow-Origin header
        # disable:
        #allowCORS: false
        # restrict:
        #allowCORS: 'some.domain.org'

        # Allow override of port/interface:
        #serverPort: 8000

        {% if groups['app-servers']|length|int == 1 and groups['parsoid-servers']|length|int == 1 and groups['app-servers'][0] == groups['parsoid-servers'][0] %}

        # One and only Parsoid server is one and only app-server
        serverInterface: "127.0.0.1"

        {% else %}

        serverInterface: "{{ inventory_hostname }}"

        {% endif %}


        # Enable linting of some wikitext errors to the log
        #linting: true
        #linter:
        #  sendAPI: false # Send lint errors to MW API instead of to the log
        #  apiSampling: 10 # Sampling rate (1 / 10)

        # Require SSL certificates to be valid (default true)
        # Set to false when using self-signed SSL certificates
        #strictSSL: false

        # Use a different server for CSS style modules.
        # Leaving it undefined (the default) will use the same URI as the MW API,
        # changing api.php for load.php.
        #modulesLoadURI: 'http://example.org/load.php'
